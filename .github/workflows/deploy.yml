name: Test & Deploy to Hetzner

on:
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:latest
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test_db
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U postgres"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        steps:
            - name: Repository auschecken
              uses: actions/checkout@v3

            # Backend-Tests
            - name: Installiere Python & AbhÃ¤ngigkeiten
              uses: actions/setup-python@v4
              with:
                  python-version: "3.12"

            - name: Installiere Backend-AbhÃ¤ngigkeiten
              run: |
                  cd backend
                  python -m venv venv
                  source venv/bin/activate
                  pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Setze Umgebungsvariablen fÃ¼r Tests
              run: |
                  echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV

            - name: FÃ¼hre Backend-Tests aus
              run: |
                  cd backend
                  source venv/bin/activate
                  pytest --maxfail=1 --disable-warnings || exit 1

            # Frontend-Tests
            - name: Installiere Node.js & AbhÃ¤ngigkeiten
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Installiere Frontend-AbhÃ¤ngigkeiten
              run: |
                  cd frontend
                  npm install

            - name: Baue das Frontend (Test)
              run: |
                  cd frontend
                  npm run build

    deploy:
        needs: test
        runs-on: ubuntu-latest

        steps:
            - name: Repository auschecken
              uses: actions/checkout@v3

            - name: Verbindung zum Server & Deployment
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HETZNER_HOST }}
                  username: ${{ secrets.HETZNER_USER }}
                  key: ${{ secrets.HETZNER_SSH_KEY }}
                  script: |
                      echo "ðŸ”„ Starte Deployment..."
                      cd /root/korrekturmanagement/
                      git pull origin main
                      echo "âœ… Code aktualisiert!"

                      # Backend aktualisieren
                      cd backend
                      if [ ! -d "venv" ]; then
                          echo "ðŸ›  Erstelle virtuelles Python-Environment..."
                          python3 -m venv venv
                      fi
                      source venv/bin/activate
                      pip install --upgrade pip
                      pip install -r requirements.txt
                      systemctl restart korrektur-backend || (pkill gunicorn && nohup gunicorn --workers 3 --bind 0.0.0.0:5000 app:app &)
                      echo "ðŸš€ Flask-Backend neu gestartet!"

                      # Frontend aktualisieren
                      cd ../frontend
                      npm install
                      rm -rf dist .vite
                      npm run build
                      systemctl restart nginx
                      echo "ðŸŽ¨ Vue-Frontend neu gebaut & Nginx neu gestartet!"
